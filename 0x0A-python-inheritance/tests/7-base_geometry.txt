"7-base_geometry" module
=========================

Using BaseGeometry
-------------------------

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Using it:
      >>> bg = BaseGeometry()
      >>> bg.integer_validator("my_int", 79)
      >>> bg.area()
      Traceback (most recent call last):
      		      ...
      Exception: area() is not implemented
      >>> bg.integer_validator()
      Traceback (most recent call last):
      		      ...
      TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
      >>> bg.integer_validator("name", "James")
      Traceback (most recent call last):
      		      ...
      TypeError: name must be an integer
      >>> bg.integer_validator("length", -9)
      Traceback (most recent call last):
      		      ...
      ValueError: length must be greater than 0
      >>> bg.integer_validator("age", -99)
      Traceback (most recent call last):
      		      ...
      ValueError: age must be greater than 0
      >>> bg.integer_validator("day", 0)
      Traceback (most recent call last):
      		      ...
      ValueError: day must be greater than 0
      >>> bg.integer_validator("age", (4,))
      Traceback (most recent call last):
      		      ...
      TypeError: age must be an integer
      >>> bg.integer_validator("age", [3])
      Traceback (most recent call last):
      		      ...
      TypeError: age must be an integer
      >>> bg.integer_validator("age", True)
      Traceback (most recent call last):
      		      ...
      TypeError: age must be an integer
      >>> bg.integer_validator("age", {3, 4})
      Traceback (most recent call last):
      		      ...
      TypeError: age must be an integer
      >>> bg.integer_validator("age", None)
      Traceback (most recent call last):
      		      ...
      TypeError: age must be an integer


"""
